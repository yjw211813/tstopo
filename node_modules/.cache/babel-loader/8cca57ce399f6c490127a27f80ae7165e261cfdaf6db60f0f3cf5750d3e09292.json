{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// localStorage.js\nconst t = import.meta.env.VITE_APP_WEB_TITLE || 'ZY';\nconst v = import.meta.env.VITE_APP_WEB_VERSION || '1.0.0';\nexport default {\n  //********普通数据持久化*********\n  // 存储数据\n  set(key, value) {\n    if (typeof value === 'object') {\n      // 如果值是对象或数组，先将其转换为 JSON 字符串再存储\n      value = JSON.stringify(value);\n    }\n    localStorage.setItem(`${t}-${v}-` + key, value);\n  },\n  // 获取数据\n  get(key) {\n    const value = localStorage.getItem(`${t}-${v}-` + key);\n    try {\n      // 尝试解析 JSON 字符串\n      return JSON.parse(value);\n    } catch (error) {\n      // 如果解析失败，则返回原始值\n      return value;\n    }\n  },\n  // 删除指定的数据\n  remove(key) {\n    localStorage.removeItem(`${t}-${v}-` + key);\n  },\n  // 清空所有 ${t}-${v}- 前缀的数据\n  clear() {\n    const prefix = `${t}-${v}-`;\n    const regex = new RegExp(`^${prefix}`);\n    const keysToRemove = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const storageKey = localStorage.key(i);\n      if (regex.test(storageKey)) {\n        keysToRemove.push(storageKey);\n      }\n    }\n    keysToRemove.forEach(key => {\n      localStorage.removeItem(key);\n    });\n  },\n  //************系统数据持久化**************\n  // 存储数据\n  sysSet(value) {\n    let storedData = localStorage.getItem(`${t}-${v}-sys`);\n    if (storedData) {\n      // 如果本地存储中已有数据，则解析为对象或数组\n      storedData = JSON.parse(storedData);\n      if (Array.isArray(storedData)) {\n        // 如果是数组，则将新值添加到数组末尾\n        storedData.push(value);\n      } else if (typeof storedData === 'object') {\n        // 如果是对象，则将新值合并到对象中\n        storedData = {\n          ...storedData,\n          ...value\n        };\n      }\n    } else {\n      // 如果本地存储中没有数据，则初始化为新值\n      storedData = value;\n    }\n\n    // 将存储数据转换为 JSON 字符串并存储到本地\n    localStorage.setItem(`${t}-${v}-sys`, JSON.stringify(storedData));\n  },\n  // 获取数据\n  sysGet() {\n    const value = localStorage.getItem(`${t}-${v}-sys`);\n    try {\n      // 尝试解析 JSON 字符串\n      return JSON.parse(value);\n    } catch (error) {\n      // 如果解析失败，则返回原始值\n      return value;\n    }\n  },\n  // 删除数据\n  sysRemove() {\n    localStorage.removeItem(`${t}-${v}-sys`);\n  }\n};","map":{"version":3,"names":["t","import","meta","env","VITE_APP_WEB_TITLE","v","VITE_APP_WEB_VERSION","set","key","value","JSON","stringify","localStorage","setItem","get","getItem","parse","error","remove","removeItem","clear","prefix","regex","RegExp","keysToRemove","i","length","storageKey","test","push","forEach","sysSet","storedData","Array","isArray","sysGet","sysRemove"],"sources":["D:/VueTest/tstopo/src/utils/util.strotage.js"],"sourcesContent":["// localStorage.js\r\nconst t = import.meta.env.VITE_APP_WEB_TITLE || 'ZY'\r\nconst v = import.meta.env.VITE_APP_WEB_VERSION || '1.0.0'\r\nexport default {\r\n    //********普通数据持久化*********\r\n    // 存储数据\r\n    set(key, value) {\r\n        if (typeof value === 'object') {\r\n            // 如果值是对象或数组，先将其转换为 JSON 字符串再存储\r\n            value = JSON.stringify(value);\r\n        }\r\n        localStorage.setItem(`${t}-${v}-` + key, value);\r\n    },\r\n\r\n    // 获取数据\r\n    get(key) {\r\n        const value = localStorage.getItem(`${t}-${v}-` + key,);\r\n        try {\r\n            // 尝试解析 JSON 字符串\r\n            return JSON.parse(value);\r\n        } catch (error) {\r\n            // 如果解析失败，则返回原始值\r\n            return value;\r\n        }\r\n    },\r\n\r\n    // 删除指定的数据\r\n    remove(key) {\r\n        localStorage.removeItem(`${t}-${v}-` + key,);\r\n    },\r\n\r\n    // 清空所有 ${t}-${v}- 前缀的数据\r\n    clear() {\r\n        const prefix = `${t}-${v}-`;\r\n        const regex = new RegExp(`^${prefix}`);\r\n        const keysToRemove = [];\r\n\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            const storageKey = localStorage.key(i);\r\n            if (regex.test(storageKey)) {\r\n                keysToRemove.push(storageKey);\r\n            }\r\n        }\r\n\r\n        keysToRemove.forEach((key) => {\r\n            localStorage.removeItem(key);\r\n        });\r\n    },\r\n\r\n    //************系统数据持久化**************\r\n    // 存储数据\r\n    sysSet(value) {\r\n        let storedData = localStorage.getItem(`${t}-${v}-sys`);\r\n\r\n        if (storedData) {\r\n            // 如果本地存储中已有数据，则解析为对象或数组\r\n            storedData = JSON.parse(storedData);\r\n\r\n            if (Array.isArray(storedData)) {\r\n                // 如果是数组，则将新值添加到数组末尾\r\n                storedData.push(value);\r\n            } else if (typeof storedData === 'object') {\r\n                // 如果是对象，则将新值合并到对象中\r\n                storedData = {...storedData, ...value};\r\n            }\r\n        } else {\r\n            // 如果本地存储中没有数据，则初始化为新值\r\n            storedData = value;\r\n        }\r\n\r\n        // 将存储数据转换为 JSON 字符串并存储到本地\r\n        localStorage.setItem(`${t}-${v}-sys`, JSON.stringify(storedData));\r\n    },\r\n\r\n    // 获取数据\r\n    sysGet() {\r\n        const value = localStorage.getItem(`${t}-${v}-sys`);\r\n        try {\r\n            // 尝试解析 JSON 字符串\r\n            return JSON.parse(value);\r\n        } catch (error) {\r\n            // 如果解析失败，则返回原始值\r\n            return value;\r\n        }\r\n    },\r\n\r\n    // 删除数据\r\n    sysRemove() {\r\n        localStorage.removeItem(`${t}-${v}-sys`);\r\n    },\r\n\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}